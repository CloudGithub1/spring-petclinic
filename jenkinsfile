pipeline {
    agent any 
    environment {
        AWS_REGION  = 'us-east-1'
        //PEM-KEY = credentials('pem-key')
    }
    
    stages {
        stage('gitclone') { 
            steps {
                git branch: 'main', credentialsId: 'private_key', url: 'https://github.com/awscloud1/spring-petclinic.git'
                
            }
        }
      stage('maven pakage build') { 
            steps {
                 sh "./mvnw package"
            }
        }
        stage('Docker Build') { 
            steps {
                sh ' docker build -t 609352431981.dkr.ecr.us-east-1.amazonaws.com/shraddha-test:${BUILD_NUMBER} . --build-arg JAR_FILE=target/spring-petclinic-2.4.2.jar'
            }
        }
        stage('Docker push') { 
            steps {
                 sh ' eval $(aws ecr get-login --region "$AWS_REGION" --no-include-email) && set -xe && docker push 609352431981.dkr.ecr.us-east-1.amazonaws.com/shraddha-test:${BUILD_NUMBER}'
            }
        }
         stage('Run Docker container on Jenkins Agent') {
             
            steps 
			{
                //sh "docker run -d -p 8042:8082 609352431981.dkr.ecr.us-east-1.amazonaws.com/shraddha-test:${BUILD_NUMBER}"
                sh 'echo "hello"'
            }
        }
        stage('Run Docker container on remote hosts') {
             
            steps {
                //sh "docker -H ssh://ec2-user@172.31.84.51 run -d -p 8042:8082 609352431981.dkr.ecr.us-east-1.amazonaws.com/shraddha-test:${BUILD_NUMBER}"
                withCredentials([usernameColonPassword(credentialsId: 'tomcat-id', variable: 'tomcat')]) {
    // some block
}
                sh "docker run -d -p 8042:8082 609352431981.dkr.ecr.us-east-1.amazonaws.com/shraddha-test:${BUILD_NUMBER}"
            }
        }
    }
}    
